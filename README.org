[[https://github.com/ezchi/go-hello-world][https://github.com/ezchi/go-hello-world/workflows/Lint%20Code%20Base/badge.svg?branch=feature/try-out-super-lint-github-action]]

* go-hello-world

This will be my code practice for [[https://golang.org/doc/code.html][How to Write Go Code - The Go Programming Language]].

** Your first program
*** Initialize go module
Update the module path and create =go.mod=.

#+begin_src sh
go mod init github.com/ezchi/go-hello-world
#+end_src

*** Add hello world source code
Now it is time to add the =hello.go=.

*** Build and run hello world
#+begin_src sh :results outputs org
go build -o hello

./hello
#+end_src

#+RESULTS:
#+begin_src org
Hello, world.
#+end_src


** Importing packages from your module
*** Create [[file:morestrings/reverse.go][morestrings/reverse.go]]

It can be build with =go build= but will not output anything.
#+begin_src sh :results org
cd morestrings

go build
#+end_src

#+RESULTS:
#+begin_src org
#+end_src

*** Use =morestrings= package from =hello=
#+begin_src sh :results org
go build -o hello

./hello
#+end_src

#+RESULTS:
#+begin_src org
.dlrow ,olleH
#+end_src

** Importing packages from remote modules
Imports "github.com/google/go-cmp/cmp" and use it in =hello=.

#+begin_src sh :results org
go build -o hello

./hello
#+end_src

#+RESULTS:
#+begin_src org
.dlrow ,olleH
  string(
- 	"Hello World",
+ 	"Hello Go",
  )

#+end_src

** Testing
*** Add test for =morestrings=

#+begin_src sh :results org
cd morestrings

go test
#+end_src

#+RESULTS:
#+begin_src org
PASS
ok  	github.com/ezchi/go-hello-world/morestrings	0.382s
#+end_src
